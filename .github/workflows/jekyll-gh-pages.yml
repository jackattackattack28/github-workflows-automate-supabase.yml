# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
name: Automate Everything with Supabase

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  automate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          if [ -f package.json ]; then
            npm ci
          fi

      - name: Install Supabase CLI
        run: npm install -g supabase

      - name: Supabase login
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        run: supabase login $SUPABASE_ACCESS_TOKEN

      - name: Deploy Edge Functions (if present)
        run: |
          if [ -d "supabase/functions" ]; then
            for fn in supabase/functions/*; do
              if [ -d "$fn" ]; then
                supabase functions deploy $(basename "$fn")
              fi
            done
          fi

      - name: Push database migrations (if present)
        run: |
          if [ -d "supabase/migrations" ]; then
            supabase db push
          fi

      - name: Run tests (if present)
        run: |
          if [ -f package.json ]; then
            npm test || true
          fi

      # OPTIONAL: Build frontend (add your build commands here)
      # - name: Build frontend
      #   run: npm run build

      # OPTIONAL: Deploy frontend (add your deployment commands here)
      
